name: Test

on:
  workflow_dispatch:
    inputs:
      unity_versions:
        description: 'Unity version (value: 2018, 2019, 2020. separated by commas)'
        default: '2019'
        required: true

env:
  pythonVersion: '3.7'
  artifactRetentionDays: 2

jobs:
  test_on_macos:
    name: test-macOS-unity${{ inputs.unity_version}}
    runs-on: macos-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - id: build_setup
        uses: ./gha/build_setup
        timeout-minutes: 30
        with:
          unity_version: ${{ inputs.unity_version }}
          platform: macOS
          python_version: ${{ env.pythonVersion }}
          unity_username: ${{ secrets.UNITY_USERNAME }}
          unity_password: ${{ secrets.UNITY_PASSWORD }}
          unity_serial_id: ${{ secrets.SERIAL_ID }}

      - name: Set Unity Env for EDM4U build script
        shell: bash
        run: echo "UNITY_EXE=${{ env.UNITY_ROOT_DIR }}/Unity.app/Contents/MacOS/Unity" >> $GITHUB_ENV

      - run: ./gradlew test -p -PINTERACTIVE_MODE_TESTS_ENABLED=0 -PEXCLUDE_TEST_TYPES=NUnit

      # Potential trouble maker
      # - run: ./gradlew :testPackageManagerResolver --info
      # - run: ./gradlew :testPackageUploader --info
      # - run: ./gradlew :testPackageManagerClientIntegrationTestsBatchMode --info

      - name: Print test log
        if: always()
        shell: bash
        run: cat test_output/test*IntegrationTestsBatchMode/*.log

      - name: Obtain Failed tests
        if: always()
        shell: bash
        continue-on-error: true
        run: |
          cat test_output/test*/*_test.log | grep "^Test .* PASSED$"
          cat test_output/test*/*_test.log | grep "^Test .* FAILED$"
          cat test_output/test*/*_test.log | grep "^Test .* SKIPPED$"

      - name: Return Unity license
        if: always()
        uses: firebase/firebase-unity-sdk/gha/unity@main
        with:
          version: ${{ inputs.unity_version }}
          release_license: "true"

      - name: Upload build logs
        uses: actions/upload-artifact@v3
        if: ${{ !cancelled() }}
        with:
          name: logs
          path: test_output/test*/*.log
          retention-days: ${{ env.artifactRetentionDays }}
